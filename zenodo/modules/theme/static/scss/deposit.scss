.deposit-panel {
    .jumbotron {
        background-color: transparent;
    }

    .active {
        font-weight: bold;
        .glyphicon {
            color: $brand-success;
        }
    }

    .field-required:after {
        content: " *";
        color: red;
    }

    .help-block {
        font-size: 0.9em;
    }

    .panel-heading {
        cursor: pointer;

        a {
            text-decoration: none;
        }
    }

    .panel {
      margin-bottom: 10px;
    }

    div[ng-controller=dynamicSelectController] {
      &>label {
        @extend .col-md-3;
      }

      &>.form-group {
        @extend .col-md-9;
        margin-left: 0;

        .caret {
          display: none;
        }
      }
    }

    input.ui-select-search {
        width: 100% !important;
    }

    .close-container.clear-form {
        height: 30px;
    }


    a.add-button {
        text-decoration: none;
        cursor: pointer;
    }

    .schema-form-array {
        ol {
            margin-left: 0;
            padding-left: 0;
            list-style: none;

            li {
                padding-top: 5px;
            }
        }
    }

    .deposit-inline {
        padding-bottom: 0;
        margin-bottom: -10px;
        padding-top: 15px;

        .schema-form-section {
            display: flex;

            sf-decorator {
                flex: 1;

                & > div {
                    margin-right: 0;
                    margin-top: -5px;
                }
            }
        }
    }

    // Field-specific styling
    .resource-type-field {
        li {
            padding-left: 20px;
            padding-right: 20px;

            label:hover {
                color: $brand-primary;
            }
        }

        span {
          font-weight: normal;
        }
    }
}

// Setting classes on ui-select components in angular schema form is pretty
// much impossible until the next version of angular-schema-form-dynamic-select
// comes out
.required-ui-select {
    div[ng-controller=dynamicSelectController] {
        label.control-label:after {
            content: " *";
            color: red;
        }
    }
}
